#!/bin/sh
###############################################################################
#
# get_Q2_TRMM_time_matches.sh    Morris/SAIC/GPM GV    November 2012
#
# DESCRIPTION:
# Determines the closest Q2 times to the TRMM overpasses at the center of each
# Q2 sector.  Uses the NASA/GSFC/PPS program 'toff' to predict the TRMM orbit
# overpasses for the upcoming month for each sector, and rounds the overpass
# times to the nearest 5 minutes.
#
# 11/9/2013   Morris      Created.
#
###############################################################################

# the following two directories are to be locally configured.  TOFF_BASE must
# reflect the installation of the TRMM_Overflight_Finder code and data files
TOFF_BASE=/home/morris/swdev/TRMM_Overflight_Finder/TOFF
TMP_DIR=/tmp

# the Overflight Finder is hard-coded to look in these locations, don't change
# -- PPSFILES is needed by the binary program, FindOrbits_exe
PPSFILES=${TOFF_BASE}/FIL
TOFF_BIN_DIR=${TOFF_BASE}/toff

# all script output and temporary files are written in TMP_DIR
TMPFILE1=${TMP_DIR}/raw_overpass_sector.txt  # takes output from FindOrbits_exe
TMPFILE2=${TMP_DIR}/Q2_overpass.txt          # merger of above, all 3 sectors
rm -v $TMPFILE2

# figure out the next month following today's date

today=`date -u +%Y%m%d`
thisYYYYMM=`echo $today | cut -c 1-6`
daysInYYYYMM=`monthdays $thisYYYYMM`
daysLeft=`grgdif $thisYYYYMM$daysInYYYYMM $today`
#daysNext=`expr $daysLeft + 1`
nextmonthbeg=`offset_date $today $daysLeft`
nextYYYYmm=`echo $nextmonthbeg | cut -c 1-6`

OUTFILE=${TMP_DIR}/Q2_overpasses_${nextYYYYmm}.txt
rm -v $OUTFILE

# get the beginning and ending dates of the next month in toff's input format

daysInYYYYMM=`monthdays $nextYYYYmm`
nextmonthend=$nextYYYYmm$daysInYYYYMM
date1=`echo $nextmonthbeg | awk '{print substr($1,1,4)" "substr($1,5,2)" "substr($1,7,2)" "}'`
date2=`echo $nextmonthend | awk '{print substr($1,1,4)" "substr($1,5,2)" "substr($1,7,2)" "}'`

# call the 'toff' program to get the month's overpasses at the 'center' lat/lons
# of each Q2 sector.  Cut out only the orbit numbers and date/times and save to
# a holding file

cd $TOFF_BIN_DIR
for lons in -115.0 -95.0 -75.0
  do
    # determine the orbit overpass time for each sector for the month
    ./FindOrbits_exe $date1 $date2 30.5 $lons 780 | grep ending | \
        cut -c 3-8,23-33,49-64 | sed 's/ing  */|/' | sed 's/ /|/' | tr [A-D] [a-d] > $TMPFILE1
    # read the results and convert the TRMM time to the nearest Q2 time
    while read line
      do
        orbit=`echo $line | cut -f1 -d '|'`
        direction=`echo $line | cut -f2 -d '|'`
        # round datetime to nearest 5 minutes (Q2 time stamps)
        textdate=`echo $line | cut -f3 -d '|'`
        ticks=`date -d "$textdate" "+%s"`  # date option to convert to ticks
        a=$(($ticks+150))   # bash arithmetic syntax: $(( some operation ))
        b=$(($a/300))
        ticksQ2=$(($b*300))
        dtimeQ2=`date -d @$ticksQ2 "+%Y-%m-%d %T"`  # option to convert FROM ticks
        # output the orbit #, Q2 times, etc. to delimited file
        echo "$lons|$ticksQ2|$orbit|TRMM|$direction|$dtimeQ2" >> $TMPFILE2
    done < $TMPFILE1
done

# loop over the unique orbit/Q2time combos and determine which sector(s) apply
# to each
while read line2
  do

     lons="-115.0"
     pattern1="$lons|$line2"
     echo $pattern1  | grep -f - $TMPFILE2 > /dev/null
     if [ $? = 0 ]
       then
         sector='|1'
       else
         sector='|0'
     fi

     lons="-95.0"
     pattern1="$lons|$line2"
     echo $pattern1  | grep -f - $TMPFILE2 > /dev/null
     if [ $? = 0 ]
       then
         sector=${sector}'|1'
       else
         sector=${sector}'|0'
     fi

     lons="-75.0"
     pattern1="$lons|$line2"
     echo $pattern1  | grep -f - $TMPFILE2 > /dev/null
     if [ $? = 0 ]
       then
         sector=${sector}'|1'
       else
         sector=${sector}'|0'
     fi

     orbit=`echo $line2 | cut -f2 -d '|'`
     others=`echo $line2 | cut -f3-5 -d '|'`
     q2ticks=`echo $line2 | cut -f1 -d '|'`
     echo ${others}'|'${q2ticks}${sector}'|'${orbit} | tee -a $OUTFILE

done <<< "`cat $TMPFILE2 | cut -f2-6 -d '|' | sort -u`"

#head $TMPFILE2
echo ""
echo "Output written to $OUTFILE"

exit
